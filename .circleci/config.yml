version: 2.1
executors:
  default:
    docker:
    - image: circleci/golang:1.17.0

aliases:
- &restore_cache
  restore_cache:
    key: go-mod-v1-{{ checksum "go.sum" }}
- &save_cache
  save_cache:
    key: go-mod-v1-{{ checksum "go.sum" }}
    paths:
      - "/go/pkg/mod"

jobs:
  check-style:
    executor:
      name: default
    steps:
    - checkout
    - *restore_cache
    - run: make check-style
    - *save_cache

  push-docker-pr:
    executor:
      name: default
    steps:
    - checkout
    - setup_remote_docker:
        version: 20.10.7
    - run: |
        export DOCKER_CLI_EXPERIMENTAL=enabled
        make build-image
    - run: make push-image-pr


  push-docker:
    executor:
      name: default
    steps:
    - checkout
    - setup_remote_docker:
        version: 20.10.7
    - run: |
        export DOCKER_CLI_EXPERIMENTAL=enabled
        make build-image
    - run: make push-image

  scan-image:
    docker:
    - image: registry.gitlab.com/gitlab-org/security-products/analyzers/klar:latest
      environment:
        GIT_STRATEGY: none
        CI_APPLICATION_REPOSITORY: mattermost/cloud-db-factory-vertical-scaling
        CLAIR_DB_CONNECTION_STRING: "postgresql://postgres:password@localhost:5432/postgres?sslmode=disable&statement_timeout=60000"
        DOCKERFILE_PATH: "build/Dockerfile"
    - image: arminc/clair-db:latest
    steps:
    - checkout
    - run: |
        export CI_APPLICATION_TAG="${CIRCLE_SHA1:0:7}"
        export DOCKER_USER=$DOCKER_USERNAME
        /analyzer run
    - store_artifacts:
        path: gl-container-scanning-report.json
        destination: security-scan

  release:
    executor: default
    steps:
      - checkout
      - run:
          command: |
            make deps
            make release

workflows:
  version: 2
  ci-build:
    jobs:
    - check-style
    - push-docker-pr:
        context: matterbuild-docker
        requires:
        - check-style
    - scan-image:
        context: matterbuild-docker
        requires:
        - push-docker-pr
  publish-github-release:
    jobs:
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
  master-build:
    jobs:
    - check-style:
        filters:
          branches:
            only:
            - master
    - push-docker:
          context: matterbuild-docker
          requires:
          - check-style
          filters:
            branches:
              only:
              - master
  tag-builds:
    jobs:
    - check-style:
        filters:
          tags:
            only: /^v.*/
          branches:
            ignore: /.*/
    - push-docker:
        context: matterbuild-docker
        requires:
        - check-style
        filters:
          tags:
            only: /^v.*/
          branches:
            ignore: /.*/
